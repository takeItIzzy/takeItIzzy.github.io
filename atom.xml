<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhao.Yuxuan</title>
  
  <subtitle>记录前端学习之路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.takeItIzzy.com/"/>
  <updated>2019-07-30T09:09:30.935Z</updated>
  <id>http://www.takeItIzzy.com/</id>
  
  <author>
    <name>Zhao.Yuxuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>易错点总结</title>
    <link href="http://www.takeItIzzy.com/2019/07/30/%E6%98%93%E9%94%99%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://www.takeItIzzy.com/2019/07/30/易错点总结/</id>
    <published>2019-07-30T02:47:38.000Z</published>
    <updated>2019-07-30T09:09:30.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="section-标签使用的几点禁忌："><a href="#section-标签使用的几点禁忌：" class="headerlink" title="section 标签使用的几点禁忌："></a>section 标签使用的几点禁忌：</h2><ol><li>section 不仅仅是一个普通的容器标签。当一个标签只是为了样式化或者方便脚本使用时，应该使用 div 。一般来说，当元素内容明确地出现在文档大纲中时，section 就是适用的。</li><li>如果其他的元素，比如 article、aside、nav 等更合适，就不要用 section。</li><li>不要为没有标题的内容区块使用 section。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;section-标签使用的几点禁忌：&quot;&gt;&lt;a href=&quot;#section-标签使用的几点禁忌：&quot; class=&quot;headerlink&quot; title=&quot;section 标签使用的几点禁忌：&quot;&gt;&lt;/a&gt;section 标签使用的几点禁忌：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="HTML" scheme="http://www.takeItIzzy.com/categories/HTML/"/>
    
    
      <category term="易错点" scheme="http://www.takeItIzzy.com/tags/%E6%98%93%E9%94%99%E7%82%B9/"/>
    
      <category term="HTML" scheme="http://www.takeItIzzy.com/tags/HTML/"/>
    
      <category term="前端学习之路" scheme="http://www.takeItIzzy.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>HTML 语义化</title>
    <link href="http://www.takeItIzzy.com/2019/07/29/html%E8%AF%AD%E4%B9%89%E5%8C%96/"/>
    <id>http://www.takeItIzzy.com/2019/07/29/html语义化/</id>
    <published>2019-07-29T02:43:34.000Z</published>
    <updated>2019-08-07T14:28:30.349Z</updated>
    
    <content type="html"><![CDATA[<p>其实 HTML 在刚开始设计出来的时候就是带有一定的“语义”的，包括段落、表格、图片、标题等等，但这些更多的只是方便浏览器等 UA 对它们做合适的处理。但逐渐地，机器也要借助 HTML 提供的语义以及自然语言处理的手段来“读懂”它们从网上获取的 HTML 文档，但它们无法读懂例如“红色的文字”或者是深度嵌套的表格布局中内容的含义，因为太多已有的内容都是专门为了可视化的浏览器设计的。面对这种情况，出现了两种观点：</p><ol><li><p>让机器的理解能力越来越接近人类，人能看懂、听懂的东西，机器也能理解；</p></li><li><p>我们应该在发布内容的时候，就用机器可读的、被广泛认可的语义信息来描述内容，来降低机器处理 Web 内容的难度。</p></li></ol><p>Web 语义化，其实就是在往第二条路的方向上迈出的一小步，即对已有的被广泛认可的 HTML 标准做改进。</p><h1 id="什么是语义类标签？"><a href="#什么是语义类标签？" class="headerlink" title="什么是语义类标签？"></a>什么是语义类标签？</h1><p>语义类标签看起来表现都差不多，主要的区别在于它们表示了不同的语义，比如 section、nav、code，都是语义类标签。</p><p>语义是我们说话表达的意思。多数的语义实际上都是由文字来承载的。语义类标签则是纯文字的补充。比如标题、自然段、章节、列表，这些内容纯文字无法表达，所以需要语义标签代为表达。</p><p><strong>语义标签并不一定会在视觉效果上有特殊之处，很多时候只是为了给被包裹的内容一个定义，加一种语义。</strong></p><h1 id="语义化的好处"><a href="#语义化的好处" class="headerlink" title="语义化的好处"></a>语义化的好处</h1><p>语义化，简单来说就是让机器可以理解内容。<strong>正确地使用语义标签可以带来很多好处：</strong></p><ul><li><p>语义类标签增强了代码可读性，开发者可以更清晰地看出网页结构，便于团队开发和维护。</p></li><li><p>除了对人类友好之外，语义类标签也十分适宜机器阅读。它们的文字表现力丰富，更适合搜索引擎检索（SEO），也可以让搜索引擎爬虫更好地获取到更多有效信息，提升网页搜索量，并且语义类还可以支持读屏软件，根据文章自动生成目录等等。</p></li></ul><p>但是，错误地使用语义标签，会给机器阅读造成混淆、增加嵌套，给 CSS 编写加重负担。</p><p>所以，对于语义标签，应该是<strong>“用对”比“不用”好，“不用”比“用错”好。</strong></p><h1 id="什么时候应该用语义化标签呢？"><a href="#什么时候应该用语义化标签呢？" class="headerlink" title="什么时候应该用语义化标签呢？"></a>什么时候应该用语义化标签呢？</h1><h2 id="作为自然语言延伸的语义类标签"><a href="#作为自然语言延伸的语义类标签" class="headerlink" title="作为自然语言延伸的语义类标签"></a>作为自然语言延伸的语义类标签</h2><p>这个场景的目的是<strong>用来表达一定的结构或者消除歧义</strong>。</p><p>先来看看“表达一定的结构”这个场景。</p><p>在日语中，有一个语法现象叫做 <em>ルビ</em> ，它的读音是“ ruby ”，中文的意思大约类似于注音或者意思的注解，它的形式可以看下图：</p><p><img src="https://static001.geekbang.org/resource/image/d4/45/d464f16955d1629b9911699e99d03f45.png" alt="ruby"></p><p>ruby 这个形式，被中国的网友玩出了新花样，比如表情包。</p><p><img src="https://static001.geekbang.org/resource/image/67/15/67e0027f9a35eac8170b758f420ff815.jpeg" alt="ruby表情包"></p><p>在 HTML5 中，就引入了这个表示 ruby 的标签，它由 ruby、rt、rp 三个标签来实现。</p><p>所以说，这些情况里存在的语义，其实原本就存在了，只是我们用纯文字无法表达，HTML 作为一种“超文本”语言，支持这些文字表达就是必要的了。</p><p>还有一种情况是，<strong>HTML 的有些标签实际上就是必要的，甚至必要的程度可以达到：如果没有这个标签，文字会产生歧义的程度。</strong></p><p><code>今天我吃了一个苹果。</code></p><p>这句话的含义看上去很清楚，但是实际上，这句话放到不同上下文中，可能表达的意思完全不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">昨天我吃了一个香蕉。</span><br><span class="line">今天我吃了一个苹果。</span><br></pre></td></tr></table></figure><p>再比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">昨天我吃了两个苹果。</span><br><span class="line">今天我吃了一个苹果。</span><br></pre></td></tr></table></figure><p>这两段的读音和意思都发生了变化。那么当没有上下文时，如何消除歧义呢？这就要用到 em 标签了，em 表示重音：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">今天我吃了一个<span class="tag">&lt;<span class="name">em</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">em</span>&gt;</span>。</span><br><span class="line">今天我吃了<span class="tag">&lt;<span class="name">em</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">em</span>&gt;</span>苹果。</span><br></pre></td></tr></table></figure><p>通过 em 标签，可以消除这样的歧义。</p><blockquote><p>拓展：<br>&emsp;&emsp;HTML 着重元素（&lt;em&gt;）标记出需要用户着重阅读的内容，通常该元素会被浏览器展示为斜体文本，&lt;em&gt; 元素是可以嵌套的，嵌套层次越深，则其包含的内容被认为越需要着重阅读。<br>&emsp;&emsp;然而，当你只想让文本展示斜体样式的时候，不应该使用 em 标签，而是用 CSS 样式来实现。使用 &lt;cite&gt; 标签来标记书本、歌曲、剧本等的标题；那也会将文本展示成斜体，但是它们有着不同的寓意。使用 &lt;strong&gt; 标签来标记比周围文本更重要的文本。</p></blockquote><h2 id="作为标题摘要的语义类标签"><a href="#作为标题摘要的语义类标签" class="headerlink" title="作为标题摘要的语义类标签"></a>作为标题摘要的语义类标签</h2><p>中国古代小说就形成了“章-回”的概念，西方的戏剧也有幕的区分，人类的自然语言作品也是如出一辙。</p><p>HTML 也应该支持这样的需求。HTML 语义标签中，有不少是用于支持这样结构的标签。</p><p>语义化的 HTML 能够支持自动生成目录结构，HTML 标准中还专门规定了生成目录结构的算法，即使我们并不打算深入实践语义，也应该尽量在大的层面上保证这些元素的语义化使用。</p><p>首先我们需要形成一个概念，一篇文档会有一个树形的目录结构，它由各个级别的标题组成。<strong>这个树形结构可能不会跟 HTML 元素的嵌套关系一致。</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTML 语义 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> 弱语义 <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>结构性元素<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这段 HTML 几乎是平铺的元素，但是它的标题结构是：</p><ul><li>HTML 语义<ul><li>弱语义</li><li>结构性元素</li><li>…</li></ul></li></ul><p>h1 - h6 是最基本的标题，它们表示了文章中不同层级的标题。有时候，我们会有副标题，为了避免副标题产生额外的一个层级，可以使用 hgroup 标签。</p><p>我们来看下有无 hgroup 的对比：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>JavaScript 对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我们需要模拟类吗？<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>此段生成以下标题结构：</p><ul><li>JavaScript 对象<ul><li>我们需要模拟类吗？</li><li>…</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>JavaScript 对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我们需要模拟类吗？<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这一段生成以下标题结构：</p><ul><li>JavaScript 对象——我们需要模拟类吗？<ul><li>…</li></ul></li></ul><p>我们通过两个效果的对比就可以知道，在 hgroup 中的 h1 - h6 被视为同一标题的不同组成部分。</p><p>从 HTML5 开始，我们有了 section 标签，这个标签不仅仅是“有语义的 div”，它会改变 h1 - h6 的语义。section 的嵌套会使得其中的 h1 - h6 下降一级。因此，在 HTML5 以后，我们只需要 section 和 h1 就足以形成文档的树形结构：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTML 语义 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span> 弱语义 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span> 结构性元素 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>balah balah<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码同样会形成前面例子的标题结构：</p><ul><li>HTML 语义<ul><li>弱语义</li><li>结构性元素</li><li>…</li></ul></li></ul><h2 id="作为整体结构的语义类标签"><a href="#作为整体结构的语义类标签" class="headerlink" title="作为整体结构的语义类标签"></a>作为整体结构的语义类标签</h2><p>这是最常见的一个语义类标签的使用场景。随着越来越多的浏览器推出“阅读模式”，以及各种非浏览器终端的出现，语义化的 HTML 适合机器阅读的特性变得越来越重要。</p><p>应用了语义化结构的页面，可以明确地提示出页面信息的主次关系，它能让浏览器很好地支持“阅读视图”功能，还可以让搜索引擎的命中率提升，同时，它也对视障用户的读屏软件更友好。</p><p>我们正确使用整体结构类的语义标签，可以让页面对机器更友好。比如，一个典型的 body 类似这样：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">            ……</span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">            ……</span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span>……<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span>……<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span>……<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">address</span>&gt;</span>……<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>除此之外，还有 article，article 是一种特别的结构，它表示具有一定独立性质的文章。所以，article 和 body 具有相似的结构，同时，一个 HTML 页面中，可能有多个 article 存在。</p><p>一个典型的场景是多篇新闻展示在同一个新闻专题页面中，这种类似报纸的多文章结构适合用 article 来组织。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>……<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>……<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span>……<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span>……<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span>……<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span>&gt;</span>……<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        ……</span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        ……</span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">address</span>&gt;</span><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>body 里面有自己的 header 和 footer ，然后里面是竖篇的 article，每一个 article 里面都有自己的 header、section、footer。这是一个典型的多文章结构。</p><p>在这个结构里，我们看到了一些新标签。</p><ul><li>header 通常出现在前部，表示导航或者介绍性的内容。</li><li>footer 通常出现在尾部，包含一些作者信息、相关链接、版权信息等。</li></ul><p>header 和 footer 一般都是放在 article 或者 body 的直接子元素，但是标准中并没有明确规定，footer 也可以和 aside，nav，section 相关联（header 不存在关联问题）。</p><ul><li>aside 表示跟文章主体不那么相关的部分，它可能包含导航、广告等工具性质的内容。</li></ul><p>aside 很容易被理解为侧边栏，实际上二者是包含关系，侧边栏是 aside，aside 不一定是侧边栏。</p><p>aside 和 header（nav 标签），二者的区别是，header 中的导航多数是到文章自己的目录，而 aside 中的导航多数是到关联页面或者是整站地图。</p><p>最后 footer 中包含 address，这是个非常容易被误用的标签。address 并非像 date 一样，表示一个给机器阅读的地址，而是表示”文章（作者）的联系方式“，address 明确地只关联到 article 和 body。</p><h1 id="用语义类标签来构建页面"><a href="#用语义类标签来构建页面" class="headerlink" title="用语义类标签来构建页面"></a>用语义类标签来构建页面</h1><p>我们通过分析一篇 Wiki 的文章用到的语义类标签，来进一步学习语义类标签。</p><ul><li><a href="http://static001.geekbang.org/static/time/quote/World_Wide_Web-Wikipedia.html" target="_blank" rel="noopener">http://static001.geekbang.org/static/time/quote/World_Wide_Web-Wikipedia.html</a></li></ul><p>虽然在原本的 Wikipedia 网站中，也是大量使用了 div 和 span 来完成功能。在这里，我们来尝试分析一下，应该如何用语义类标签来呈现这样的一个页面。</p><h2 id="aside"><a href="#aside" class="headerlink" title="aside"></a>aside</h2><blockquote><p><strong>HTML &lt;aside&gt; 元素</strong>表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响。其通常表现为侧边栏或者标注框（call-out boxes）。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/b6/da/b692ade1e78d295de52ffe01edaa11da.png" alt="aside"></p><p>首先我们来看下，左侧侧边栏，根据之前提到的语义定义，这里属于 aside 内容，是导航性质的工具内容。</p><h2 id="article"><a href="#article" class="headerlink" title="article"></a>article</h2><blockquote><p><strong>HTML &lt;article&gt; 元素</strong>表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。​​</p></blockquote><blockquote><p>引申阅读：<a href="https://www.qianduan.net/html5-differences-in-the-div-section-article/" target="_blank" rel="noopener">div, section, article 的区别</a></p></blockquote><p><img src="https://static001.geekbang.org/resource/image/cf/aa/cfc9a6542e0fc973e6e871043e7e42aa.jpeg" alt="article"></p><p>我们来到文章主体部分，因为主体部分具有明确的独立性，所以可以用 article 来包裹。</p><h2 id="hgroup-h1-h2"><a href="#hgroup-h1-h2" class="headerlink" title="hgroup, h1, h2"></a>hgroup, h1, h2</h2><blockquote><p><strong>HTML &lt;hgroup&gt; 元素 (HTML Headings Group Element)</strong> 代表一个段的标题。它规定了在文档轮廓里（the outline of the document ）的单一标题是它所属的隐式或显式部分的标题。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/7d/48/7ddad196e7734fd32bfc577b3a459c48.jpeg" alt="hgroup"></p><p>前文中介绍过 hgroup 和 h1 - h6 的作用，hgroup 是标题组，h1 是一级标题，h2 是二级标题。这里，World Wide Web 是文章的大标题，适合 h1 元素。</p><p>接下来出现了一个副标题。From Wikipedia, the free encyclopedia。这个地方适合使用 h2，跟 h1 组成一个 hgroup，所以代码可能是类似这样的：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>World Wide Web <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>From Wikipedia, the free encyclopedia<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="abbr"><a href="#abbr" class="headerlink" title="abbr"></a>abbr</h2><blockquote><p><strong>HTML &lt;abbr&gt; 元素</strong>用于展示缩写，并且可以通过可选的 title 属性提供完整的描述。若使用 title 属性，则它必须且仅可包含完整的描述内容。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/13/72/139b1603d3851b11e9ee4ed955aec972.png" alt="abbr"></p><p>abbr 标签表示缩写。考虑到 WWW 是 World Wide Web 的缩写，所以文中所有出现的 WWW，都应该使用 abbr 标签。</p><p><code>&lt;abbr title=&quot;World Wide Web&quot;&gt;WWW&lt;/abbr&gt;</code></p><h2 id="hr"><a href="#hr" class="headerlink" title="hr"></a>hr</h2><blockquote><p><strong>HTML &lt;hr&gt; 元素</strong>表示段落级元素之间的主题转换（例如，一个故事中的场景的改变，或一个章节的主题的改变）。在 HTML 的早期版本中，它是一个水平线。现在它仍能在可视化浏览器中表现为水平线，但目前被定义为语义上的，而不是表现层面上。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/3e/1e/3e3fca7df41dd824da47efca4aa2731e.jpeg" alt="hr"></p><p>在 Wiki 的界面中，出现了一条很长的横线，大家都知道 hr 标签表示横向分隔线，那么这个地方是不是应该用 hr 呢？</p><p>答案是不用。hr 表示故事走向的转变或者话题的转变，显然此处两个标题并非这种关系，所以我们应该使用 CSS 的 border 来把它当作纯视觉效果来实现，在这里是不需要使用 hr 的。</p><h2 id="p"><a href="#p" class="headerlink" title="p"></a>p</h2><blockquote><p>HTML &lt;p&gt; 元素（或者说 HTML 段落元素）表示文本的一个段落。该元素通常表现为一整块与相邻文本分离的文本，或以垂直的空白隔离或以首行缩进。另外，&lt;p&gt; 是块级元素。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/a5/d4/a5c22955f87e2861cadfa3fdb15565d4.jpeg" alt="p"></p><p>接下来一段，有三段“note”，也就是注记。它在文章中用作额外注释。HTML 中并没有 note 相关的语义，所以我们用普通的 p 标签，加上 class=”note” 来实现。后面的多数自然段都是普通的段落，我们用 p 标签来实现。</p><h2 id="strong"><a href="#strong" class="headerlink" title="strong"></a>strong</h2><blockquote><p>Strong 元素 (&lt;strong&gt;)表示文本十分重要，一般用粗体显示。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/d7/a1/d7f8b1f98df1488813c3fc2d6b06d5a1.jpeg" alt="strong"></p><p>这里“World Wide Web(www)”和“the Web”使用了黑体呈现，从上下文来看，这里表示这个词很重要，所以我们使用 strong 标签。</p><h2 id="blockquote-q-cite"><a href="#blockquote-q-cite" class="headerlink" title="blockquote, q, cite"></a>blockquote, q, cite</h2><blockquote><p>&emsp;&emsp;HTML &lt;blockquote&gt; 元素（或者 HTML 块级引用元素），代表其中的文字是引用内容。通常在渲染时，这部分的内容会有一定的缩进（可通过 margin 修改）。若引文来源于网络，则可以将原内容的出处 URL 地址设置到 blockquote 元素的 cite 属性上，若要以文本的形式告知读者引文的出处时，可以使用 &lt;cite&gt; 元素。<br>&emsp;&emsp;HTML 引用标签 (&lt;q&gt;)表示一个封闭的并且是短的行内引用的文本。这个标签是用来引用短的文本，所以请不要引入换行符; 对于长的文本的引用请使用 &lt;blockquote&gt; 替代。<br>&emsp;&emsp;HTML 引用（Citation）标签 (&lt;cite&gt;) 表示一个作品的引用。它必须包含引用作品的符合简写格式的标题或者 URL ，它可能是一个根据添加引用元数据的约定的简写形式。<strong>可以把 cite 标签简单理解为书名号。</strong></p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;blockquote cite=<span class="string">"https://www.huxley.net/bnw/four.html"</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;p&gt;</span></span><br><span class="line">        Words can <span class="keyword">be</span> like <span class="keyword">X</span>-rays, <span class="keyword">if</span> you use them properly—they’<span class="keyword">ll</span> <span class="keyword">go</span> through anything. You <span class="keyword">read</span> <span class="built_in">and</span> you’re pierced.</span><br><span class="line">    &lt;/<span class="keyword">p</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;footer&gt;</span></span><br><span class="line">        —Aldous Huxley, <span class="symbol">&lt;cite&gt;</span>Brave New World&lt;/cite&gt;</span><br><span class="line">    &lt;/footer&gt;</span><br><span class="line">&lt;/blockquote&gt;</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/resource/image/e5/1a/e516e5e00ecc5b6b0b743dd2a8d65d1a.png" alt="引用"></p><p>接下来我们看到了一个论文中很常见的用法——“引述”。</p><p>注意看这里的 [1]，当我们把鼠标放上去的时候，出现了引述的相关信息。</p><p>在 HTML 中，有三个跟引述相关的标签：blockquote 表示段落级引述内容，q 表示行内的引述内容，cite 表示引述的作品名。</p><p>这里的作品名称“What is the difference between the Web and the Internet?”，应当使用 cite 标签。</p><p>在文章的结尾处，有对应的 Reference 一节，这一节中所有的作品名称也应该加入 cite 标签。</p><p><img src="https://static001.geekbang.org/resource/image/31/45/31246e3ebf6426bfd6b1373a0644b245.png" alt="cite"></p><p>这里我们看看引用的原文就可以知道，Wiki 文章中的信息并非直接引用，如果是直接引用的内容，那么，我们还应该加上 blockquote 或者 q 标签。</p><h2 id="time"><a href="#time" class="headerlink" title="time"></a>time</h2><blockquote><p>&emsp;&emsp;HTML time 标签(&lt;time&gt;) 用来表示 24 小时制时间或者公历日期，若表示日期则也可包含时间和时区。<br>&emsp;&emsp;<strong>此元素意在以机器可读的格式表示日期和时间。</strong> 有安排日程表功能的应用可以利用这一点。<br>&emsp;&emsp;<strong>用法提示：</strong>如果给定的日期不是正常日期或者在公历中最早的日期之前，请不要使用此元素。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/95/b6/9573647112ae3812013b37c29aa7d2b6.png" alt="time"></p><p>这里除了引用的文章之外，还出现了日期，为了让机器阅读更加方便，可以加上 time 标签。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;cite&gt;<span class="string">"What is the difference between the Web and the Internet?"</span>&lt;/cite&gt;. W3C Help <span class="keyword">and</span> FAQ. W3C. <span class="number">2009.</span> Archived <span class="keyword">from</span> <span class="keyword">the</span> original <span class="keyword">on</span> &lt;<span class="built_in">time</span> datetime=<span class="string">"2015-07-09"</span>&gt;<span class="number">9</span> July <span class="number">2015</span>&lt;/<span class="built_in">time</span>&gt;. Retrieved &lt;<span class="built_in">time</span> datetime=<span class="string">"2015-07-16"</span>&gt;<span class="number">16</span> July <span class="number">2015</span>&lt;/<span class="built_in">time</span>&gt;.</span><br></pre></td></tr></table></figure><h2 id="figure-figcaption"><a href="#figure-figcaption" class="headerlink" title="figure, figcaption"></a>figure, figcaption</h2><blockquote><p>&emsp;&emsp;HTML &lt;figure&gt; 元素（可附标题内容元素）代表一段独立的内容, 经常与说明（caption） &lt;figcaption&gt; 配合使用, 并且作为一个独立的引用单元。当它属于主内容流（main flow）时，它的位置独立于主体。这个标签经常是在主文中引用的图片，插图，表格，代码段等等，当这部分转移到附录中或者其他页面时不会影响到主体。<br>&emsp;&emsp;HTML &lt;figcaption&gt; 元素 是与其相关联的图片的说明/标题，用于描述其父节点 &lt;figure&gt; 元素里的其他数据。这意味着 &lt;figcaption&gt; 在&lt;figure&gt; 块里是第一个或最后一个。同时 HTML Figcaption 元素是可选的；如果没有该元素，这个父节点的图片只是会没有说明/标题。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/media/examples/elephant-660-480.jpg"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">alt</span>=<span class="string">"Elephant at sunset"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>An elephant at sunset<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/resource/image/6d/72/6d473b6fb734ea85a8cc209bc1716b72.png" alt="figure"></p><p>我们注意一下文章的右侧，出现了几张图片，这种出现在文中的图片，不仅仅是一个 img 标签，它和下面的文字组成了一个 figure 的语法现象，figure 也是我们的一种标签，用于表示与主文章相关的图像、照片等流内容）。</p><p>这种插入文章中的内容，不仅限图片、代码表格等，只要具有一定自包含性（类似独立句子）的内容，都可以用 figure。这里，我们用 figcaption 表示内容的标题，当然也可以没有标题。</p><h2 id="dfn"><a href="#dfn" class="headerlink" title="dfn"></a>dfn</h2><blockquote><ul><li>&lt;dfn&gt; 元素标记了被定义的术语；术语定义应当在 &lt;p&gt;, &lt;section&gt; 或定义列表 (通常是 &lt;dt&gt;, &lt;dd&gt; 对)中给出。</li><li>被定义术语的值由下列规则确定：<ol><li>如果 &lt;dfn&gt; 元素有一个 title 属性，那么该术语的值就是该属性的值。</li><li>否则，如果它仅包含一个 &lt;abbr&gt; 元素，该元素拥有 title 属性，那么该术语的值就是该属性的值。</li><li>否则，&lt;dfn&gt; 元素的文本内容就是该术语的值。</li></ol></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Define "The Internet" --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">dfn</span> <span class="attr">id</span>=<span class="string">"def-internet"</span>&gt;</span>The Internet<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span> is a global system of interconnected networks that use the Internet Protocol Suite (TCP/IP) to serve billions of users worldwide.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Define "World-Wide Web" and reference definition for "the Internet" --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dfn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World-Wide Web"</span>&gt;</span>WWW<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dfn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>The World-Wide Web (WWW) is a system of interlinked hypertext documents accessed on <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#def-internet"</span>&gt;</span>the Internet<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/resource/image/b7/19/b7ae53127450b496729edd459cbc0619.png" alt="dfn"></p><p>注意这一句：</p><blockquote><p>The terms Internet and World Wide Web are often used without much distinction. However, the two are not the same. The Internet is a global system of interconnected computer networks. In contrast, the World Wide Web is a global collection of documents and other resorces, linked by hyperlinks and URIs.</p></blockquote><p>这里分别定义了 Internet 和 World Wide Web，应该使用 dfn 标签。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The terms Internet <span class="keyword">and</span> World Wide Web are often used <span class="keyword">without</span> much distinction. However, <span class="keyword">the</span> <span class="literal">two</span> are <span class="keyword">not</span> <span class="keyword">the</span> same.</span><br><span class="line">The &lt;dfn&gt;Internet&lt;/dfn&gt; is <span class="keyword">a</span> <span class="built_in">global</span> <span class="keyword">system</span> <span class="keyword">of</span> interconnected computer networks.</span><br><span class="line">In contrast, <span class="keyword">the</span> &lt;dfn&gt;World Wide Web&lt;/dfn&gt; is <span class="keyword">a</span> <span class="built_in">global</span> collection <span class="keyword">of</span> documents <span class="keyword">and</span> other resources, linked <span class="keyword">by</span> hyperlinks <span class="keyword">and</span> URIs.</span><br></pre></td></tr></table></figure><p>代码中可以看到，你需要在你定义的词前后放上 dfn 标签，所以我们知道了，dfn 标签是用来包裹被定义的名词。</p><h2 id="nav-ol-ul"><a href="#nav-ol-ul" class="headerlink" title="nav, ol, ul"></a>nav, ol, ul</h2><blockquote><p>&emsp;&emsp;HTML &lt;nav&gt; 元素表示页面的一部分，其目的是在当前文档或其他文档中提供导航链接。导航部分的常见示例是菜单，目录和索引。<br>&emsp;&emsp;&lt;ol&gt; 和 &lt;ul&gt; 都是列表项。它们的不同点在于 &lt;ol&gt; 元素里条目的顺序是有意义的。 对于该选择哪一个去使用下面有个建议：尝试去更改列表项的顺序，如果其含义改变了，那么应该使用 &lt;ol&gt; 元素，否则使用 &lt;ul&gt; 更合适。</p></blockquote><p><img src="https://static001.geekbang.org/resource/image/c1/f6/c12c129af98f6aa99b7dcdbdef1f62f6.png" alt="nav"></p><p>接下来，几个普通的段落之后，我们看到了文章的目录。这里的目录链接到文章的各个章节，我们可以使用 nav 标签。因为这里的目录顺序不可随意变化，所以我们使用多级的 ol 结构。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Contents<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"..."</span>&gt;</span>History<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"..."</span>&gt;</span>Function<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"..."</span>&gt;</span>Linking<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"..."</span>&gt;</span>Dynamic updates of web pages<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意，ol 和 ul 的区分是内容是否有顺序关系，每一项前面不论是数字还是点，都不影响语义的判断。不要因为视觉表现效果，而改变语义的使用。</p><h2 id="pre-samp-code"><a href="#pre-samp-code" class="headerlink" title="pre, samp, code"></a>pre, samp, code</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;其实 HTML 在刚开始设计出来的时候就是带有一定的“语义”的，包括段落、表格、图片、标题等等，但这些更多的只是方便浏览器等 UA 对它们做合适的处理。但逐渐地，机器也要借助 HTML 提供的语义以及自然语言处理的手段来“读懂”它们从网上获取的 HTML 文档，但它们无法读
      
    
    </summary>
    
      <category term="HTML" scheme="http://www.takeItIzzy.com/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://www.takeItIzzy.com/tags/HTML/"/>
    
      <category term="前端学习之路" scheme="http://www.takeItIzzy.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="语义化" scheme="http://www.takeItIzzy.com/tags/%E8%AF%AD%E4%B9%89%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>从今天起记录我的前端学习之路</title>
    <link href="http://www.takeItIzzy.com/2019/07/26/%E4%BB%8E%E4%BB%8A%E5%A4%A9%E8%B5%B7%E8%AE%B0%E5%BD%95%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <id>http://www.takeItIzzy.com/2019/07/26/从今天起记录我的前端学习之路/</id>
    <published>2019-07-26T05:22:13.000Z</published>
    <updated>2019-07-26T08:19:34.790Z</updated>
    
    <content type="html"><![CDATA[<p>从今天起，我要开始记录我自己的前端学习之路了。</p><p>其实我不完全是前端的小白，断断续续知识也学了不少了，只是前端知识面覆盖太广，而我学习时间拖的太长，好多都已经遗忘了，所以一直都想找个机会从头把所有知识点都巩固一下。</p><p>前两天翻知乎，看到一个问题——有哪些适合前端程序员浏览的网站，有答案推荐了百度前端学院，我就想正好利用这个平台好好巩固一下我的基础知识。今天花了一上午搭建了这个个人网站，希望可以将我的学习之路好好地记录下来。</p><p>我喜欢前端，一是因为可以做出精致的，直接展示给用户的交互界面，二是因为我很喜欢JavaScript这门语言。不是说js本身性能多么好，语法多么完美，而是js一开始被人们认为是玩具语言，不出多少年必死的言论层出不穷，然而js却越挫越勇，在很多大神手中玩出了花，甚至现在可以只靠js就能从前端到后台，从桌面程序到跨平台应用，都在一个人手中实现，太厉害了。而那句著名的，“一切能用JavaScript实现的程序，最终都会被用JavaScript实现”，也深深打动了我。</p><p>希望自己可以将这个网站坚持做下去，也许几年后的自己真的会感激我现在的努力，加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从今天起，我要开始记录我自己的前端学习之路了。&lt;/p&gt;
&lt;p&gt;其实我不完全是前端的小白，断断续续知识也学了不少了，只是前端知识面覆盖太广，而我学习时间拖的太长，好多都已经遗忘了，所以一直都想找个机会从头把所有知识点都巩固一下。&lt;/p&gt;
&lt;p&gt;前两天翻知乎，看到一个问题——有
      
    
    </summary>
    
      <category term="杂感" scheme="http://www.takeItIzzy.com/categories/%E6%9D%82%E6%84%9F/"/>
    
    
  </entry>
  
</feed>
